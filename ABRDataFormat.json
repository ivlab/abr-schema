{
    "$schema": "http://json-schema.org/draft-07/schema",
    "description": "Custom, hierarchical format for the Artifact-Based Rendering data",
    "properties": {
        "children": { "$ref": "#/" },
        "keyData": {
            "type": "object",
            "properties": {
                "path": {
                    "description": "Path describing this geometric data object",
                    "$ref": "#/definitions/DataPath"
                },
                "vertices": {
                    "description": "Where to find vertices in the dataset",
                    "$ref": "#/definitions/DataFileInfo"
                },
                "indices": {
                    "description": "Where to find indices in the dataset",
                    "$ref": "#/definitions/DataFileInfo"
                },
                "cellIndexOffsets": {
                    "description": "Where to find index offsets for cells",
                    "$ref": "#/definitions/DataFileInfo"
                },
                "cellIndexCounts": {
                    "description": "Where to find number of cell indices",
                    "$ref": "#/definitions/DataFileInfo"
                },
                "topology": {
                    "description": "What type of data is this? Should correspond to the UnityMeshTopology defined in https://github.umn.edu/ivlab-cs/ABRUtilities/blob/master/ABRDataFormat/abr_data_format/ABRDataFormat.py",
                    "type": "string",
                    "enum": ["Triangles", "Quads", "Lines", "LineStrip", "Points", "Volume"]
                }
            }
        },
        "variables": {
            "type": "array",
            "description": "The actual data variables present inside at each point in the key data",
            "items": {
                "$ref": "#/definitions/DataVariable"
            }
        },
        "attributes": {
            "type": "array",
            "description": "Data variables that are applied to this entire node",
            "$ref": "#/definitions/DataVariable"
        },
        "transform": {
            "description": "Hierarchical transform of this particular part of the data",
            "$ref": "#/definitions/Matrix4x4"
        }
    },

    "definitions": {
        "Matrix4x4": {
            "type": "object",
            "properties": {
                "m00": { "type": "number" },
                "m01": { "type": "number" },
                "m02": { "type": "number" },
                "m03": { "type": "number" },
                "m10": { "type": "number" },
                "m11": { "type": "number" },
                "m12": { "type": "number" },
                "m13": { "type": "number" },
                "m20": { "type": "number" },
                "m21": { "type": "number" },
                "m22": { "type": "number" },
                "m23": { "type": "number" },
                "m30": { "type": "number" },
                "m31": { "type": "number" },
                "m32": { "type": "number" },
                "m33": { "type": "number" }
            }
        },

        "DataPath": {
            "type": "string",
            "$comment": "Update whenever a new data source is added to the data server. Eventually should pull this bit of schema from the data server.",
            "pattern": "^([^/]+)\/([^/]+)\/(KeyData|Var)\/([^/]+)$"
        },

        "DataFileInfo": {
            "description": "Info for data located in separate data files",
            "type": "object",
            "properties": {
                "fileName": {
                    "description": "The file in which the data is present",
                    "type": "string"
                },
                "offset": {
                    "description": "Byte offset in the `fileName` file in which to find the data",
                    "type": "integer"
                },
                "length": {
                    "description": "Byte length in the `fileName` file",
                    "type": "integer"
                }
            }
        },

        "DataVariable": {
            "properties": {
                "path": {
                    "description": "Path describing this variable",
                    "$ref": "#/definitions/DataPath"
                },
                "shape": {
                    "type": "object",
                    "description": "Dimensionality of the var (e.g. Vector3: h=3 w=1, float: h=1 w=1)",
                    "properties": {
                        "height": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "width": {
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                },
                "data": {
                    "description": "External file where the actual data is located",
                    "$ref": "#/definitions/DataFileInfo"
                },
                "minimum": {
                    "description": "Global minimum value of the data variable (defined by the shape)"
                },
                "maximum": {
                    "description": "Global maximum value of the data variable (defined by the shape)"
                }
            }
        }
    }
}